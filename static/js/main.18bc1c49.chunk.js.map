{"version":3,"sources":["index.js"],"names":["Filter","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","type","onChange","event","onTextChange","target","value","Button","className","class","onClick","filter","buttonText","ReactDOM","render","data","require","_useState","useState","_useState2","Object","C_Users_leo_Desktop_Yle_Ennakot_kaltaisesi_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","candidateName","setCandidateName","_useState3","_useState4","male","setMale","_useState5","_useState6","female","setFemale","_useState7","_useState8","young","setYoung","_useState9","_useState10","middleAge","setMiddleAge","_useState11","_useState12","old","setOld","_useState13","_useState14","fin","setFin","_useState15","_useState16","sve","setSve","_useState17","_useState18","peruskoulu","setPeruskoulu","_useState19","_useState20","ammattikoulu","setAmmattikoulu","_useState21","_useState22","lukio","setLukio","_useState23","_useState24","korkeakoulu","setKorkeakoulu","filteredCandidates","d","firstName","toLowerCase","includes","lastName","gender","age","language","education","href","text","id","length","map","memberOfParliament","key","Math","random","abbr","occupation","document","getElementById"],"mappings":"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","file":"static/js/main.18bc1c49.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst App = () => {\n  const data = require('./data.json') // Käytetty data-aineisto\n\n  // Hookit eli tässä tapauksessa boolean-tilat eri vastausvaihtoehdoille.\n  // Oletuksena false joka ei suodata mitään.\n  // Pois lukien nimihaun tila, joka on tyhjä string.\n  const [candidateName, setCandidateName] = useState(\"\")\n  const [male, setMale] = useState(false)\n  const [female, setFemale] = useState(false)\n  const [young, setYoung] = useState(false)\n  const [middleAge, setMiddleAge] = useState(false)\n  const [old, setOld] = useState(false)\n  const [fin, setFin] = useState(false)\n  const [sve, setSve] = useState(false)\n  const [peruskoulu, setPeruskoulu] = useState(false)\n  const [ammattikoulu, setAmmattikoulu] = useState(false)\n  const [lukio, setLukio] = useState(false)\n  const [korkeakoulu, setKorkeakoulu] = useState(false)\n\n  // Suodatetaan dataa lukijan valitsemilla muuttujilla.\n  // Jos true, suodatetaan valinnan mukaan. Jos false, ei suodateta mitään.\n  // Oletuksena siis näkyy kaikki nimet.\n  // Ekana tekstihaku nimille, sitten booleanit: sukupuoli, ikä, kieli ja koulutus.\n  const filteredCandidates = data\n  .filter(d => \n    d.firstName.toLowerCase().includes(candidateName.toLowerCase()) || \n    d.lastName.toLowerCase().includes(candidateName.toLowerCase()))\n  .filter (d => male ? d.gender === 1 : d.gender)\n  .filter (d => female ? d.gender === 2 : d.gender)\n  .filter (d => young ? d.age < 35 : d.age)\n  .filter (d => middleAge ? d.age >= 35 && d.age <= 50 : d.age)\n  .filter (d => old ? d.age > 50 : d.age)\n  .filter (d => fin ? d.language === \"Suomi\" : d.language)\n  .filter (d => sve ? d.language === \"Ruotsi\" : d.language)\n  .filter (d => peruskoulu ? d.education === \"peruskoulu\" : d.education)\n  .filter (d => ammattikoulu ? d.education === \"ammattitutkinto\" : d.education)\n  .filter (d => lukio ? d.education === \"ylioppilas\" : d.education)\n  .filter (d => korkeakoulu ? d.education === \"korkeakoulututkinto\" : d.education)\n\n  //Funktio nollaamaan lukijan tekemät valinnat\n  // -> kaikki tilat falseiksi ja nimi tyhjäksi stringiksi\n  const reset = () => {\n    return () => {\n        setCandidateName(\"\")\n        setMale(false)\n        setFemale(false)\n        setYoung(false)\n        setMiddleAge(false)\n        setOld(false)\n        setFin(false)\n        setSve(false)\n        setPeruskoulu(false)\n        setAmmattikoulu(false)\n        setLukio(false)\n        setKorkeakoulu(false)\n    }\n  }\n\n  // Sivulle renderöityvät elementit\n  return (\n    <div className=\"wrapper\">\n\n      <div className=\"beginning\">\n        <h1>Kaltaisesi</h1>\n        <p className=\"lead\">Kuinka moni vastavalitun eduskunnan 200 kansanedustajasta muistuttaa sinua? Vastaa kysymyksiin ja katso tulos.</p>\n      </div>\n      <hr/>\n\n      <div className=\"interactive\">\n\n        <div className=\"selections\">\n          <h2>Kerro itsestäsi</h2>\n          <p>Vastaa niin moneen kohtaan kuin haluat. Jos et vastaa yhteenkään, voit tarkastella kaikkia uusia kansanedustajia <a className=\"ankkuri\" href=\"#tulos\">oheisesta listasta</a>. Emme tallenna vastauksia tai kerää sinusta dataa.</p>\n\n          <h3>Sukupuoli</h3>\n          <Button class={male ? 'active' : 'passive'} \n                  filter={() => setMale(!male)} \n                  buttonText={'mies'} />\n          <Button class={female ? 'active' : 'passive'} \n                  filter={() => setFemale(!female)} \n                  buttonText={'nainen'} />\n\n          <h3>Ikä</h3>\n          <Button class={young ? 'active' : 'passive'} \n                  filter={() => setYoung(!young)} \n                  buttonText={'alle 35'} />\n          <Button class={middleAge ? 'active' : 'passive'} \n                  filter={() => setMiddleAge(!middleAge)} \n                  buttonText={'35 - 50'} />\n          <Button class={old ? 'active' : 'passive'} \n                  filter={() => setOld(!old)} \n                  buttonText={'yli 50'} />\n\n          <h3>Kieli</h3>\n          <Button class={fin ? 'active' : 'passive'} \n                  filter={() => setFin(!fin)} \n                  buttonText={'suomi'} />\n          <Button class={sve ? 'active' : 'passive'} \n                  filter={() => setSve(!sve)} \n                  buttonText={'ruotsi'} />\n\n          <h3>Koulutustaso</h3>\n          <Button class={peruskoulu ? 'active' : 'passive'} \n                  filter={() => setPeruskoulu(!peruskoulu)} \n                  buttonText={'peruskoulu'} />\n          <Button class={ammattikoulu ? 'active' : 'passive'} \n                  filter={() => setAmmattikoulu(!ammattikoulu)} \n                  buttonText={'ammattikoulu'} />\n          <Button class={lukio ? 'active' : 'passive'} \n                  filter={() => setLukio(!lukio)} \n                  buttonText={'lukio'} />\n          <Button class={korkeakoulu ? 'active' : 'passive'} \n                  filter={() => setKorkeakoulu(!korkeakoulu)} \n                  buttonText={'korkeakoulu'} />\n\n          <h3>Etu- tai sukunimi</h3>\n          <Filter onTextChange={text => setCandidateName(text)}/>\n          \n          <small>Vastausvaihtoehdot perustuvat kansanedustajien tietoihin. Esimerkiksi muita kieliä ei valinnoissa ole, koska edustajista kaikki ovat suomen- tai ruotsinkielisiä tai tieto puuttuu.</small>\n\n          <h3>- - -</h3>\n          <Button class=\"resetButton\" \n                  filter={reset()} \n                  buttonText=\"Tyhjennä kaikki valintasi\"/>\n\n        </div>\n\n        <div id=\"tulos\" className=\"results\">\n\n          <div className=\"kaltaisesi\">\n            <h2>Sinua muistuttavia kansanedustajia ovat:</h2>\n            <p className=\"total\">Yhteensä <span className=\"invert\">{filteredCandidates.length}</span> kansanedustajaa</p>\n\n            <ul>\n              {filteredCandidates.map(d => {\n                if (d.memberOfParliament === false) {\n                  return (\n                    <li className=\"uusi\" key={Math.random(21)}>\n                        <b>{d.firstName} {d.lastName}</b>, {d.age}, {d.abbr}<br/>\n                        <span className=\"occupation\">{d.occupation}</span>\n                    </li>\n                  )\n                }\n                else {\n                  return (\n                    <li key={Math.random(42)}>\n                      <b>{d.firstName} {d.lastName}</b>, {d.age}, {d.abbr}<br/>\n                      <span className=\"occupation\">{d.occupation}</span>\n                    </li>\n                  )\n                }\n              } \n              )}\n            </ul>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Input-komponentti hakuja kuten etunimeä varten\nconst Filter = (props) => {\n  return (\n    <>\n    <input type=\"text\" onChange={event => \n    props.onTextChange(event.target.value) }/>\n    </>\n\n  )\n}\n\n// Nappi-komponentti - tyyli class, klikkauseventti, ja napin teksti ovat dynaamisia\nconst Button = (props) => {\n  return (\n    <>\n    <button className={props.class} onClick={props.filter}>{props.buttonText}</button>\n    </>\n  )\n}\n\n\n// Renderöintikomento\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}